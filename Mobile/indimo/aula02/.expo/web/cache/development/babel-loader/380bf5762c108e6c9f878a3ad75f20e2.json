{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value2 = _useState4[0],\n      setValue2 = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      soma = _useState6[0],\n      setSoma = _useState6[1];\n\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      value: value,\n      placeholder: \"Primeiro Valor\",\n      onChangeText: function onChangeText(valor) {\n        setValue(valor);\n      }\n    }), _jsx(TextInput, {\n      value: value2,\n      placeholder: \"Primeiro Valor\",\n      onChangeText: function onChangeText(valor2) {\n        setValue2(valor2);\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        setSoma(Number(value) + Number(value2));\n      },\n      children: _jsx(Text, {\n        children: \"+\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        setSoma(Number(value) - Number(value2));\n      },\n      children: _jsx(Text, {\n        children: \"-\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        setSoma(Number(value) / Number(value2));\n      },\n      children: _jsx(Text, {\n        children: \"/\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        setSoma(Number(value) * Number(value2));\n      },\n      children: _jsx(Text, {\n        children: \"*\"\n      })\n    }), _jsx(Text, {\n      children: res\n    })]\n  });\n}","map":{"version":3,"names":["useState","App","value","setValue","value2","setValue2","soma","setSoma","valor","valor2","Number","res"],"sources":["C:/Users/Desenvolvimento/Desktop/logic2/Mobile/indimo/aula02/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { View, TouchableOpacity, Text, TextInput, StyleSheet } from 'react-native';\n\nexport default function App() {\n  const [value, setValue] = useState(\"\");\n  const [value2, setValue2] = useState(\"\");\n  const [soma, setSoma] = useState(\"\");\n  return (\n    <View>\n      <TextInput value={value} placeholder={\"Primeiro Valor\"} onChangeText={(valor) => { setValue(valor); }} />\n      <TextInput value={value2} placeholder={\"Primeiro Valor\"} onChangeText={(valor2) => { setValue2(valor2); }} />\n      <TouchableOpacity onPress={() => {\n        setSoma(Number(value) + Number(value2));\n      }}>\n        <Text>+</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => {\n        setSoma(Number(value) - Number(value2));\n      }}>\n        <Text>-</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => {\n        setSoma(Number(value) / Number(value2));\n      }}>\n        <Text>/</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => {\n        setSoma(Number(value) * Number(value2));\n      }}>\n        <Text>*</Text>\n      </TouchableOpacity>\n\n      <Text>{res}</Text>\n    </View >\n  );\n}"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;;;;AAGA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAA0BD,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOE,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAA4BH,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOI,MAAP;EAAA,IAAeC,SAAf;;EACA,iBAAwBL,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOM,IAAP;EAAA,IAAaC,OAAb;;EACA,OACE,MAAC,IAAD;IAAA,WACE,KAAC,SAAD;MAAW,KAAK,EAAEL,KAAlB;MAAyB,WAAW,EAAE,gBAAtC;MAAwD,YAAY,EAAE,sBAACM,KAAD,EAAW;QAAEL,QAAQ,CAACK,KAAD,CAAR;MAAkB;IAArG,EADF,EAEE,KAAC,SAAD;MAAW,KAAK,EAAEJ,MAAlB;MAA0B,WAAW,EAAE,gBAAvC;MAAyD,YAAY,EAAE,sBAACK,MAAD,EAAY;QAAEJ,SAAS,CAACI,MAAD,CAAT;MAAoB;IAAzG,EAFF,EAGE,KAAC,gBAAD;MAAkB,OAAO,EAAE,mBAAM;QAC/BF,OAAO,CAACG,MAAM,CAACR,KAAD,CAAN,GAAgBQ,MAAM,CAACN,MAAD,CAAvB,CAAP;MACD,CAFD;MAAA,UAGE,KAAC,IAAD;QAAA;MAAA;IAHF,EAHF,EAQE,KAAC,gBAAD;MAAkB,OAAO,EAAE,mBAAM;QAC/BG,OAAO,CAACG,MAAM,CAACR,KAAD,CAAN,GAAgBQ,MAAM,CAACN,MAAD,CAAvB,CAAP;MACD,CAFD;MAAA,UAGE,KAAC,IAAD;QAAA;MAAA;IAHF,EARF,EAaE,KAAC,gBAAD;MAAkB,OAAO,EAAE,mBAAM;QAC/BG,OAAO,CAACG,MAAM,CAACR,KAAD,CAAN,GAAgBQ,MAAM,CAACN,MAAD,CAAvB,CAAP;MACD,CAFD;MAAA,UAGE,KAAC,IAAD;QAAA;MAAA;IAHF,EAbF,EAkBE,KAAC,gBAAD;MAAkB,OAAO,EAAE,mBAAM;QAC/BG,OAAO,CAACG,MAAM,CAACR,KAAD,CAAN,GAAgBQ,MAAM,CAACN,MAAD,CAAvB,CAAP;MACD,CAFD;MAAA,UAGE,KAAC,IAAD;QAAA;MAAA;IAHF,EAlBF,EAwBE,KAAC,IAAD;MAAA,UAAOO;IAAP,EAxBF;EAAA,EADF;AA4BD"},"metadata":{},"sourceType":"module"}