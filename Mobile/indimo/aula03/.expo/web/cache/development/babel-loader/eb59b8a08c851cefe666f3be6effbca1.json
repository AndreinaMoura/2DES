{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value2 = _useState4[0],\n      setValue2 = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      res = _useState6[0],\n      setRes = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      op = _useState8[0],\n      setOp = _useState8[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: style.TextInput,\n      value: value,\n      placeholder: \"Primeiro Valor\",\n      onChangeText: function onChangeText(valor) {\n        setValue(valor);\n      }\n    }), _jsx(TextInput, {\n      style: style.TextInput,\n      value: value2,\n      placeholder: \"Primeiro Valor\",\n      onChangeText: function onChangeText(valor2) {\n        setValue2(valor2);\n      }\n    }), _jsxs(View, {\n      style: style.contem,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          setOp(Number(value) + Number(value2));\n        },\n        children: _jsx(Text, {\n          style: style.Text,\n          children: \"+\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          setOp(Number(value) - Number(value2));\n        },\n        children: _jsx(Text, {\n          style: style.Text,\n          children: \"-\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          setOp(Number(value) / Number(value2));\n        },\n        children: _jsx(Text, {\n          style: style.Text,\n          children: \"/\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          setOp(Number(value) * Number(value2));\n        },\n        children: _jsx(Text, {\n          style: style.Text,\n          children: \"*\"\n        })\n      })]\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        setRes(op);\n      },\n      children: [_jsx(Text, {\n        style: style.Text2,\n        children: \"Calcular\"\n      }), _jsx(TextInput, {\n        style: style.Text3,\n        value: \"Resultado\",\n        children: res\n      })]\n    }), _jsx(Text, {\n      children: \"Open up App.js to start working on!\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","useState","App","value","setValue","value2","setValue2","res","setRes","op","setOp","styles","container","style","TextInput","valor","valor2","contem","Number","Text","Text2","Text3","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/Desenvolvimento/Desktop/logic2/Mobile/indimo/aula03/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { View, TouchableOpacity, Text, TextInput, StyleSheet } from 'react-native';\n\nexport default function App() {\n  const [value, setValue] = useState(\"\");\n  const [value2, setValue2] = useState(\"\");\n  const [res, setRes] = useState(\"\");\n  const [op, setOp] = useState(\"\");\n\n  return (\n    \n    <View style={styles.container}>\n      <TextInput style={style.TextInput} value={value} placeholder={\"Primeiro Valor\"} onChangeText={(valor) => { setValue(valor); }} />\n      <TextInput style={style.TextInput} value={value2} placeholder={\"Primeiro Valor\"} onChangeText={(valor2) => { setValue2(valor2); }} />\n      \n        <View style={style.contem}>\n        <TouchableOpacity onPress={() => {\n        setOp(Number(value) + Number(value2));\n      }}>\n        <Text style={style.Text}>+</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => {\n        setOp(Number(value) - Number(value2));\n      }}>\n        <Text style={style.Text}>-</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => {\n        setOp(Number(value) / Number(value2));\n      }}>\n        <Text style={style.Text}>/</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => {\n        setOp(Number(value) * Number(value2));\n      }}>\n        <Text style={style.Text}>*</Text>\n      </TouchableOpacity>\n        </View>\n      <TouchableOpacity onPress={() => {\n        setRes(op)\n      }}>\n        <Text style={style.Text2}>Calcular</Text>\n        <TextInput style={style.Text3} value={\"Resultado\"}>{res}</TextInput>\n      </TouchableOpacity>\n      <Text>Open up App.js to start working on!</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}