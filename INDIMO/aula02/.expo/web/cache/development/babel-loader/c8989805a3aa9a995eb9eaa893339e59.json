{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"digite algo\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Numero1:\"\n      }), _jsx(TextInput, {\n        value: value,\n        onChangeText: function onChangeText(valor) {\n          setValue(valor);\n        }\n      })]\n    }), \"Vi\", _jsx(Text, {\n      children: \"Numero2:\"\n    }), _jsx(TextInput, {\n      value: value,\n      onChangeText: function onChangeText(valor2) {\n        setValue(valor2);\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: console.log(valor + valor2),\n      children: _jsx(Text, {\n        children: \"Executar\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["useState","App","value","setValue","valor","valor2","console","log"],"sources":["C:/Users/Desenvolvimento/Desktop/logic2/Mobile/indimo/aula02/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { View, TouchableOpacity, Text, TextInput, StyleSheet } from 'react-native';\n\nexport default function App() {\n  const [value, setValue] = useState(\"digite algo\");\n  return (\n    <View>\n      <View>\n        <Text>Numero1:</Text>\n        <TextInput value={value} onChangeText={(valor) => { setValue(valor); }} />\n      </View>\nVi\n      <Text>Numero2:</Text>\n      <TextInput value={value} onChangeText={(valor2) => { setValue(valor2); }} />\n      <TouchableOpacity onPress={console.log(valor + valor2)}>\n        <Text>Executar</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;;;;AAGA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAA0BD,QAAQ,CAAC,aAAD,CAAlC;EAAA;EAAA,IAAOE,KAAP;EAAA,IAAcC,QAAd;;EACA,OACE,MAAC,IAAD;IAAA,WACE,MAAC,IAAD;MAAA,WACE,KAAC,IAAD;QAAA;MAAA,EADF,EAEE,KAAC,SAAD;QAAW,KAAK,EAAED,KAAlB;QAAyB,YAAY,EAAE,sBAACE,KAAD,EAAW;UAAED,QAAQ,CAACC,KAAD,CAAR;QAAkB;MAAtE,EAFF;IAAA,EADF,QAME,KAAC,IAAD;MAAA;IAAA,EANF,EAOE,KAAC,SAAD;MAAW,KAAK,EAAEF,KAAlB;MAAyB,YAAY,EAAE,sBAACG,MAAD,EAAY;QAAEF,QAAQ,CAACE,MAAD,CAAR;MAAmB;IAAxE,EAPF,EAQE,KAAC,gBAAD;MAAkB,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYH,KAAK,GAAGC,MAApB,CAA3B;MAAA,UACE,KAAC,IAAD;QAAA;MAAA;IADF,EARF;EAAA,EADF;AAcD"},"metadata":{},"sourceType":"module"}