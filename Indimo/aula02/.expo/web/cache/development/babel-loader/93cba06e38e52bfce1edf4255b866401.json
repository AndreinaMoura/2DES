{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      soma = _useState4[0],\n      setSoma = _useState4[1];\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Numero1:\"\n    }), _jsx(TextInput, {\n      value: value,\n      onChangeText: function onChangeText(valor) {\n        setValue(valor);\n      }\n    }), _jsx(Text, {\n      children: \"Numero2:\"\n    }), _jsx(TextInput, {\n      value: value,\n      onChangeText: function onChangeText(valor2) {\n        setValue(valor2);\n      }\n    }), _jsxs(TouchableOpacity, {\n      onPress: Number(valor) + Number(valor2),\n      children: [_jsx(Text, {}), _jsx(Text, {\n        children: \"Executar\"\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["useState","App","value","setValue","soma","setSoma","valor","valor2","Number"],"sources":["C:/Users/Desenvolvimento/Desktop/logic2/Mobile/indimo/aula02/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { View, TouchableOpacity, Text, TextInput, StyleSheet } from 'react-native';\n\nexport default function App() {\n  const [value, setValue] = useState(\"\");\n  \n  const [soma, setSoma] = useState(\"\");\n  return (\n    <View>\n        <Text>Numero1:</Text>\n        <TextInput value={value} onChangeText={(valor) => { setValue(valor); }} />\n        <Text>Numero2:</Text>\n        <TextInput value={value} onChangeText={(valor2) => { setValue(valor2); }} />\n      <TouchableOpacity onPress={(Number(valor) + Number(valor2))}>\n        <Text></Text>\n        <Text>Executar</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;;;;AAGA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAA0BD,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOE,KAAP;EAAA,IAAcC,QAAd;;EAEA,iBAAwBH,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOI,IAAP;EAAA,IAAaC,OAAb;;EACA,OACE,MAAC,IAAD;IAAA,WACI,KAAC,IAAD;MAAA;IAAA,EADJ,EAEI,KAAC,SAAD;MAAW,KAAK,EAAEH,KAAlB;MAAyB,YAAY,EAAE,sBAACI,KAAD,EAAW;QAAEH,QAAQ,CAACG,KAAD,CAAR;MAAkB;IAAtE,EAFJ,EAGI,KAAC,IAAD;MAAA;IAAA,EAHJ,EAII,KAAC,SAAD;MAAW,KAAK,EAAEJ,KAAlB;MAAyB,YAAY,EAAE,sBAACK,MAAD,EAAY;QAAEJ,QAAQ,CAACI,MAAD,CAAR;MAAmB;IAAxE,EAJJ,EAKE,MAAC,gBAAD;MAAkB,OAAO,EAAGC,MAAM,CAACF,KAAD,CAAN,GAAgBE,MAAM,CAACD,MAAD,CAAlD;MAAA,WACE,KAAC,IAAD,KADF,EAEE,KAAC,IAAD;QAAA;MAAA,EAFF;IAAA,EALF;EAAA,EADF;AAYD"},"metadata":{},"sourceType":"module"}